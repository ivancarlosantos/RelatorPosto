/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AbastecimentoSC.java
 *
 * Created on Nov 25, 2010, 12:19:36 PM
 */
package relatorpostoeaton.screens;

import java.io.OutputStream;
import com.tomtessier.scrollabledesktop.BaseInternalFrame;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.net.UnknownHostException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import relatorpostoeaton.business.AbastecimentoController;
import relatorpostoeaton.business.datamodels.AbastecimentoDataModel;
import relatorpostoeaton.business.datamodels.CarroDataModel;
import relatorpostoeaton.business.datamodels.ColaboradorDataModel;
import relatorpostoeaton.business.jpa.AbastecimentoJpaController;
import relatorpostoeaton.business.jpa.CarroJpaController;
import relatorpostoeaton.business.jpa.ColaboradorJpaController;
import relatorpostoeaton.business.jpa.FrentistaJpaController;
import relatorpostoeaton.business.jpa.exceptions.NonexistentEntityException;
import relatorpostoeaton.entities.Abastecimento;
import relatorpostoeaton.entities.Carro;
import relatorpostoeaton.entities.Colaborador;
import relatorpostoeaton.entities.Frentista;

/**
 *
 * @author icarlos
 */
public final class AbastecimentoSC extends BaseInternalFrame {

    private static final long serialVersionUID = 1L;

    public static JRadioButton getSelection(ButtonGroup group) {
        for (Enumeration e = group.getElements(); e.hasMoreElements();) {
            JRadioButton b = (JRadioButton) e.nextElement();
            if (b.getModel() == group.getSelection()) {
                return b;
            }
        }
        return null;
    }
    private static AbastecimentoSC instanceAbastecimentoSC;
    private AbastecimentoController ac;
    private List<Abastecimento> abastecimentoList = new LinkedList<Abastecimento>();
    private LinkedList<String> tagList = new LinkedList<String>();
    private List<Carro> carroList = new LinkedList<Carro>();
    private List<Colaborador> colabList = new LinkedList<Colaborador>();
    private WindowFindTagCards wftc = new WindowFindTagCards();
    private CarroJpaController cjc = new CarroJpaController();
    private ColaboradorJpaController colabjc = new ColaboradorJpaController();
    private Boolean operControl = false;  // false igual criar

    public void refreshTable() {
        AbastecimentoJpaController ajc = new AbastecimentoJpaController();
        abastecimentoList.clear();
        abastecimentoList.addAll(ajc.findAbastecimentoEntities());
        AbastecimentoDataModel adm = new AbastecimentoDataModel(ajc.findAbastecimentoEntities());
        this.jTabelaAbastecimento.setModel(adm);
    }

    public static AbastecimentoSC getInstanceAbastecimentoSC() {
        if (instanceAbastecimentoSC == null) {
            instanceAbastecimentoSC = new AbastecimentoSC();
            instanceAbastecimentoSC.setTitle("ABASTECIMENTO");
        }
        return instanceAbastecimentoSC;
    }

    /** Creates new form AbastecimentoSC */
    public AbastecimentoSC() {
        initComponents();
        jCmbBxFrentista.setModel(getFrentistasCmbList());
        jCmbBxAbastecCarro.setModel(getCarrosCmbList());
        jCmbBxMotorista.setModel(getColaboradorCmbList());
        refreshTable();
    }

    public DefaultComboBoxModel getFrentistasCmbList() {
        FrentistaJpaController fjc = new FrentistaJpaController();
        Vector<Frentista> vf = new Vector<Frentista>(fjc.findFrentistaEntities());
        return new DefaultComboBoxModel(vf);
    }

    public DefaultComboBoxModel getCarrosCmbList() {
        CarroJpaController carjc = new CarroJpaController();
        Vector<Carro> vc = new Vector<Carro>(carjc.findCarroEntities());
        return new DefaultComboBoxModel(vc);
    }

    public DefaultComboBoxModel getColaboradorCmbList() {
        ColaboradorJpaController cojc = new ColaboradorJpaController();
        Vector<Colaborador> vco = new Vector<Colaborador>(cojc.findColaboradorEntities());
        return new DefaultComboBoxModel(vco);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        bGDisponibilidadeAbastec = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabelaAbastecimento = new javax.swing.JTable();
        jPanelAbastecimento = new javax.swing.JPanel();
        id = new javax.swing.JLabel();
        motorista = new javax.swing.JLabel();
        carro = new javax.swing.JLabel();
        dataAbastecimento = new javax.swing.JLabel();
        jCmbBxCombustivel = new javax.swing.JComboBox();
        combustivel = new javax.swing.JLabel();
        litros = new javax.swing.JLabel();
        jTxtFldLitros = new javax.swing.JTextField();
        km = new javax.swing.JLabel();
        jTxtFldKM = new javax.swing.JTextField();
        jDisponibilidade = new javax.swing.JPanel();
        jBtnGrpAbastecimentoAtivo = new javax.swing.JRadioButton();
        jBtnGrpAbastecimentoInativo = new javax.swing.JRadioButton();
        jCmbBxMotorista = new javax.swing.JComboBox();
        frentista = new javax.swing.JLabel();
        liberador = new javax.swing.JLabel();
        jCmbBxLiberador = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jBtnSalvar = new javax.swing.JButton();
        jBtnNovo = new javax.swing.JButton();
        jBtnSair = new javax.swing.JButton();
        jBtnExcluir = new javax.swing.JButton();
        jBtnAntenna = new javax.swing.JButton();
        jFrmTxtFldDataAbastecimento = new javax.swing.JFormattedTextField();
        jCmbBxFrentista = new javax.swing.JComboBox();
        jCmbBxAbastecCarro = new javax.swing.JComboBox();
        jTxtFldIDAbastecimento = new javax.swing.JTextField();

        setClosable(true);
        setMinimumSize(new java.awt.Dimension(800, 440));
        setName("Form"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTabelaAbastecimento.setModel(AbastecimentoController.getInstance().getAbastecimentoDataModel());
        jTabelaAbastecimento.setName("jTabelaAbastecimento"); // NOI18N
        jTabelaAbastecimento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaAbastecimentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTabelaAbastecimento);

        jPanelAbastecimento.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelAbastecimento.setMinimumSize(new java.awt.Dimension(1000, 540));
        jPanelAbastecimento.setName("jPanelAbastecimento"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(relatorpostoeaton.RelatorPostoEatonApp.class).getContext().getResourceMap(AbastecimentoSC.class);
        id.setText(resourceMap.getString("id.text")); // NOI18N
        id.setMinimumSize(new java.awt.Dimension(13, 17));
        id.setName("id"); // NOI18N

        motorista.setText(resourceMap.getString("motorista.text")); // NOI18N
        motorista.setMinimumSize(new java.awt.Dimension(13, 17));
        motorista.setName("motorista"); // NOI18N

        carro.setText(resourceMap.getString("carro.text")); // NOI18N
        carro.setMinimumSize(new java.awt.Dimension(13, 17));
        carro.setName("carro"); // NOI18N

        dataAbastecimento.setText(resourceMap.getString("dataAbastecimento.text")); // NOI18N
        dataAbastecimento.setMinimumSize(new java.awt.Dimension(13, 17));
        dataAbastecimento.setName("dataAbastecimento"); // NOI18N

        jCmbBxCombustivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gasolina", "√Ålcool", "Diesel", "GNV" }));
        jCmbBxCombustivel.setMinimumSize(new java.awt.Dimension(30, 20));
        jCmbBxCombustivel.setName("jCmbBxCombustivel"); // NOI18N

        combustivel.setText(resourceMap.getString("combustivel.text")); // NOI18N
        combustivel.setMinimumSize(new java.awt.Dimension(13, 17));
        combustivel.setName("combustivel"); // NOI18N

        litros.setText(resourceMap.getString("litros.text")); // NOI18N
        litros.setMinimumSize(new java.awt.Dimension(13, 17));
        litros.setName("litros"); // NOI18N

        jTxtFldLitros.setText(resourceMap.getString("jTxtFldLitros.text")); // NOI18N
        jTxtFldLitros.setName("jTxtFldLitros"); // NOI18N

        km.setText(resourceMap.getString("km.text")); // NOI18N
        km.setMinimumSize(new java.awt.Dimension(13, 17));
        km.setName("km"); // NOI18N

        jTxtFldKM.setText(resourceMap.getString("jTxtFldKM.text")); // NOI18N
        jTxtFldKM.setMinimumSize(new java.awt.Dimension(30, 20));
        jTxtFldKM.setName("jTxtFldKM"); // NOI18N

        jDisponibilidade.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jDisponibilidade.border.title"))); // NOI18N
        jDisponibilidade.setMinimumSize(new java.awt.Dimension(30, 20));
        jDisponibilidade.setName("jDisponibilidade"); // NOI18N

        bGDisponibilidadeAbastec.add(jBtnGrpAbastecimentoAtivo);
        jBtnGrpAbastecimentoAtivo.setText(resourceMap.getString("jBtnGrpAbastecimentoAtivo.text")); // NOI18N
        jBtnGrpAbastecimentoAtivo.setName("jBtnGrpAbastecimentoAtivo"); // NOI18N

        bGDisponibilidadeAbastec.add(jBtnGrpAbastecimentoInativo);
        jBtnGrpAbastecimentoInativo.setText(resourceMap.getString("jBtnGrpAbastecimentoInativo.text")); // NOI18N
        jBtnGrpAbastecimentoInativo.setActionCommand(resourceMap.getString("jBtnGrpAbastecimentoInativo.actionCommand")); // NOI18N
        jBtnGrpAbastecimentoInativo.setName("jBtnGrpAbastecimentoInativo"); // NOI18N

        javax.swing.GroupLayout jDisponibilidadeLayout = new javax.swing.GroupLayout(jDisponibilidade);
        jDisponibilidade.setLayout(jDisponibilidadeLayout);
        jDisponibilidadeLayout.setHorizontalGroup(
            jDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDisponibilidadeLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jBtnGrpAbastecimentoAtivo, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addGap(49, 49, 49)
                .addComponent(jBtnGrpAbastecimentoInativo, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addGap(84, 84, 84))
        );
        jDisponibilidadeLayout.setVerticalGroup(
            jDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jBtnGrpAbastecimentoInativo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnGrpAbastecimentoAtivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jCmbBxMotorista.setMinimumSize(new java.awt.Dimension(30, 20));
        jCmbBxMotorista.setName("jCmbBxMotorista"); // NOI18N

        frentista.setText(resourceMap.getString("frentista.text")); // NOI18N
        frentista.setMinimumSize(new java.awt.Dimension(13, 17));
        frentista.setName("frentista"); // NOI18N

        liberador.setText(resourceMap.getString("liberador.text")); // NOI18N
        liberador.setMinimumSize(new java.awt.Dimension(13, 17));
        liberador.setName("liberador"); // NOI18N

        jCmbBxLiberador.setMinimumSize(new java.awt.Dimension(30, 20));
        jCmbBxLiberador.setName("jCmbBxLiberador"); // NOI18N

        jPanel3.setMinimumSize(new java.awt.Dimension(40, 25));
        jPanel3.setName("jPanel3"); // NOI18N

        jBtnSalvar.setText(resourceMap.getString("jBtnSalvar.text")); // NOI18N
        jBtnSalvar.setMinimumSize(new java.awt.Dimension(30, 20));
        jBtnSalvar.setName("jBtnSalvar"); // NOI18N
        jBtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalvarActionPerformed(evt);
            }
        });

        jBtnNovo.setText(resourceMap.getString("jBtnNovo.text")); // NOI18N
        jBtnNovo.setMinimumSize(new java.awt.Dimension(30, 20));
        jBtnNovo.setName("jBtnNovo"); // NOI18N
        jBtnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNovoActionPerformed(evt);
            }
        });

        jBtnSair.setText(resourceMap.getString("jBtnSair.text")); // NOI18N
        jBtnSair.setMinimumSize(new java.awt.Dimension(30, 20));
        jBtnSair.setName("jBtnSair"); // NOI18N
        jBtnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSairActionPerformed(evt);
            }
        });

        jBtnExcluir.setText(resourceMap.getString("jBtnExcluir.text")); // NOI18N
        jBtnExcluir.setMinimumSize(new java.awt.Dimension(30, 20));
        jBtnExcluir.setName("jBtnExcluir"); // NOI18N
        jBtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExcluirActionPerformed(evt);
            }
        });

        jBtnAntenna.setText(resourceMap.getString("jBtnAntenna.text")); // NOI18N
        jBtnAntenna.setName("jBtnAntenna"); // NOI18N
        jBtnAntenna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAntennaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtnAntenna, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtnAntenna, jBtnExcluir, jBtnNovo, jBtnSair, jBtnSalvar});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jBtnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnAntenna, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtnAntenna, jBtnExcluir, jBtnNovo, jBtnSair, jBtnSalvar});

        jFrmTxtFldDataAbastecimento.setText(resourceMap.getString("jFrmTxtFldDataAbastecimento.text")); // NOI18N
        jFrmTxtFldDataAbastecimento.setName("jFrmTxtFldDataAbastecimento"); // NOI18N

        jCmbBxFrentista.setName("jCmbBxFrentista"); // NOI18N

        jCmbBxAbastecCarro.setName("jCmbBxAbastecCarro"); // NOI18N

        jTxtFldIDAbastecimento.setText(resourceMap.getString("jTxtFldIDAbastecimento.text")); // NOI18N
        jTxtFldIDAbastecimento.setEnabled(false);
        jTxtFldIDAbastecimento.setName("jTxtFldIDAbastecimento"); // NOI18N

        javax.swing.GroupLayout jPanelAbastecimentoLayout = new javax.swing.GroupLayout(jPanelAbastecimento);
        jPanelAbastecimento.setLayout(jPanelAbastecimentoLayout);
        jPanelAbastecimentoLayout.setHorizontalGroup(
            jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAbastecimentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(litros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(frentista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelAbastecimentoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTxtFldLitros, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelAbastecimentoLayout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCmbBxFrentista, 0, 197, Short.MAX_VALUE)
                                    .addComponent(jTxtFldIDAbastecimento, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(motorista, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(combustivel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(liberador, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCmbBxLiberador, javax.swing.GroupLayout.Alignment.LEADING, 0, 193, Short.MAX_VALUE)
                            .addComponent(jCmbBxMotorista, javax.swing.GroupLayout.Alignment.LEADING, 0, 193, Short.MAX_VALUE)
                            .addComponent(jCmbBxCombustivel, 0, 193, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carro, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(km, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                                .addComponent(jTxtFldKM, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addComponent(jCmbBxAbastecCarro, 0, 191, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                                .addComponent(dataAbastecimento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFrmTxtFldDataAbastecimento, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jDisponibilidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelAbastecimentoLayout.setVerticalGroup(
            jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(frentista, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtFldLitros)
                    .addComponent(litros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(92, 92, 92))
            .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCmbBxAbastecCarro)
                            .addComponent(jTxtFldIDAbastecimento)
                            .addComponent(jCmbBxMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dataAbastecimento, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addComponent(jFrmTxtFldDataAbastecimento)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(motorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDisponibilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanelAbastecimentoLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combustivel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTxtFldKM, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmbBxCombustivel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmbBxFrentista)
                            .addComponent(km, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelAbastecimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCmbBxLiberador, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(liberador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelAbastecimentoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCmbBxCombustivel, jCmbBxMotorista});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelAbastecimento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAbastecimento, javax.swing.GroupLayout.PREFERRED_SIZE, 203, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jBtnNovoActionPerformed(java.awt.event.ActionEvent evt) {                                         
        setAc(AbastecimentoController.getInstance());
        getAc().setCurrentAbastecimento(new Abastecimento());
        jTxtFldIDAbastecimento.setText("");
        jFrmTxtFldDataAbastecimento.setText("");
        jTxtFldLitros.setText("");
        jTxtFldKM.setText("");
        operControl = false;
        JOptionPane.showMessageDialog(this, "Campos Apagados Com Sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
    }                                        

    private void criar() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        AbastecimentoJpaController ajc = new AbastecimentoJpaController();
        setAc(AbastecimentoController.getInstance());
        try {
            //ac.getCurrentAbastecimento().setId(Long.parseLong(jTxtFldIDAbastecimento.getText()));
            ac.getCurrentAbastecimento().setDataAbastecimento(sdf.parse(jFrmTxtFldDataAbastecimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(AbastecimentoSC.class.getName()).log(Level.SEVERE, null, ex);
        }
        ac.getCurrentAbastecimento().setKm(Double.parseDouble(jTxtFldKM.getText()));
        ac.getCurrentAbastecimento().setLitros(Double.parseDouble(jTxtFldLitros.getText()));
        ac.getCurrentAbastecimento().setCombustivel(jCmbBxCombustivel.getSelectedItem().toString());
        ac.getCurrentAbastecimento().setMotorista((Colaborador) (jCmbBxMotorista.getSelectedItem()));
        ac.getCurrentAbastecimento().setFrentista((Frentista) (jCmbBxFrentista.getSelectedItem()));
        ac.getCurrentAbastecimento().setCarro((Carro) (jCmbBxAbastecCarro.getSelectedItem()));
        if (getSelection(bGDisponibilidadeAbastec).equals(jBtnGrpAbastecimentoAtivo)) {
            ac.getCurrentAbastecimento().setAtivo(true);
        } else {
            ac.getCurrentAbastecimento().setAtivo(false);
        }
        try {
            ajc.create(getAc().getCurrentAbastecimento());
            refreshTable();
            JOptionPane.showMessageDialog(this, "Campos Gravados Com Sucesso!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Campos N√£o Inseridos e/ou Gravados, Tente Novamente!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    private void editar() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        AbastecimentoJpaController ajc = new AbastecimentoJpaController();
        setAc(AbastecimentoController.getInstance());
        try {
            //ac.getCurrentAbastecimento().setId(Long.parseLong(jTxtFldIDAbastecimento.getText()));
            ac.getCurrentAbastecimento().setDataAbastecimento(sdf.parse(jFrmTxtFldDataAbastecimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(AbastecimentoSC.class.getName()).log(Level.SEVERE, null, ex);
        }
        ac.getCurrentAbastecimento().setKm(Double.parseDouble(jTxtFldKM.getText()));
        ac.getCurrentAbastecimento().setLitros(Double.parseDouble(jTxtFldLitros.getText()));
        ac.getCurrentAbastecimento().setCombustivel(jCmbBxCombustivel.getSelectedItem().toString());
        ac.getCurrentAbastecimento().setMotorista((Colaborador) (jCmbBxMotorista.getSelectedItem()));
        ac.getCurrentAbastecimento().setFrentista((Frentista) (jCmbBxFrentista.getSelectedItem()));
        ac.getCurrentAbastecimento().setCarro((Carro) (jCmbBxAbastecCarro.getSelectedItem()));
        if (getSelection(bGDisponibilidadeAbastec).equals(jBtnGrpAbastecimentoAtivo)) {
            ac.getCurrentAbastecimento().setAtivo(true);
        } else {
            ac.getCurrentAbastecimento().setAtivo(false);
        }
        try {
            ajc.edit(getAc().getCurrentAbastecimento());
            refreshTable();
            JOptionPane.showMessageDialog(this, "Campos Gravados Com Sucesso!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Campos N√£o Inseridos e/ou Gravados, Tente Novamente!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void jBtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if (!operControl) {
            criar();
        } else {
            editar();
        }
    }                                          

    private void jTabelaAbastecimentoMouseClicked(java.awt.event.MouseEvent evt) {                                                  
        ac = AbastecimentoController.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Abastecimento abst = abastecimentoList.get(jTabelaAbastecimento.getSelectedRow());
        ac.setCurrentAbastecimento(abastecimentoList.get(jTabelaAbastecimento.getSelectedRow()));
        operControl = true;

        jTxtFldIDAbastecimento.setText(ac.getCurrentAbastecimento().getId().toString());
        jTxtFldKM.setText(ac.getCurrentAbastecimento().getKm().toString());
        jTxtFldLitros.setText(ac.getCurrentAbastecimento().getLitros().toString());
        jFrmTxtFldDataAbastecimento.setText(sdf.format(abst.getDataAbastecimento()));
        jCmbBxFrentista.setSelectedItem(abst.getFrentista());
        jCmbBxMotorista.setSelectedItem(abst.getMotorista());
        jCmbBxCombustivel.setSelectedItem(abst.getCombustivel());
        jCmbBxAbastecCarro.setSelectedItem(abst.getCarro());
        jCmbBxLiberador.setSelectedItem(abst.getLiberacao());

        if (abst.getAtivo()) {
            jBtnGrpAbastecimentoAtivo.setSelected(true);
        } else {
            jBtnGrpAbastecimentoInativo.setSelected(false);
        }
    }                                                 

    private void jBtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            AbastecimentoJpaController ajc = new AbastecimentoJpaController();
            Integer excl = JOptionPane.showConfirmDialog(this, "Deseja Excluir o Campo Selecionado ?", "AVISO", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (excl == JOptionPane.YES_OPTION) {
                ajc.destroy(ac.getCurrentAbastecimento().getId());
                refreshTable();
                JOptionPane.showMessageDialog(this, "Cadastro Apagado Com Sucesso !", "AVISO", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(AbastecimentoSC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                           

    private void jBtnSairActionPerformed(java.awt.event.ActionEvent evt) {                                         
        dispose();
    }                                        

    private void jBtnAntennaActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            tagList.clear();
            Socket socket = new Socket("127.0.0.1", 8080);
            System.out.println("Connected to server...sending echo string");
            OutputStream out = socket.getOutputStream();
            out.write("select id from tag_id;\n".getBytes("US-ASCII"));
            String tag;
            BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            boolean sair = false;
            while (!sair) {
                tag = br.readLine();
                System.out.println("====Render====\n" + tag);
                if (tag.length() <= 0) {
                    sair = true;
                    br.close();
                } else {
                    tagList.add(tag);
                }
            }
            socket.close();
            for (String t : tagList) {
                Carro c = cjc.findCarroByTag(t);
                Colaborador colab = colabjc.findColaboradorByTag(t);
                if (c != null) {
                    carroList.add(c);  // adiciona o carro cadastrado na  lista da frame tags encontradas
                    wftc.getjTableCarros().setModel(new CarroDataModel(carroList));
                    wftc.setVisible(true);
                } else {
                    if (colab != null) {
                        colabList.add(colab); // adiciona o carro cadastrado na  lista da frame tags encontradas
                        wftc.getjTableFrentistas().setModel(new ColaboradorDataModel(colabList));
                        wftc.setVisible(true);
                    } else {
                        //JOptionPane.showMessageDialog(null, "NENHUMA TAGCARD ENCONTRADA", "AVISO", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
            System.out.println("<====Ok====>" + carroList.size());
            if (carroList.size() > 1 || colabList.size() > 1) {
                wftc.setVisible(true);
                wftc.getjTableCarros().setModel(new CarroDataModel(carroList));
                wftc.getjTableFrentistas().setModel(new ColaboradorDataModel(colabList));
            } else {
                JOptionPane.showMessageDialog(null, "NENHUMA TAGCARD ENCONTRADA", "AVISO", JOptionPane.WARNING_MESSAGE);
            }
        } catch (UnknownHostException ex) {
            ex.printStackTrace();
            Logger.getLogger(MenuLateralSC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            ex.printStackTrace();
            Logger.getLogger(MenuLateralSC.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AbastecimentoSC().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup bGDisponibilidadeAbastec;
    private javax.swing.JLabel carro;
    private javax.swing.JLabel combustivel;
    private javax.swing.JLabel dataAbastecimento;
    private javax.swing.JLabel frentista;
    private javax.swing.JLabel id;
    private javax.swing.JButton jBtnAntenna;
    private javax.swing.JButton jBtnExcluir;
    private javax.swing.JRadioButton jBtnGrpAbastecimentoAtivo;
    private javax.swing.JRadioButton jBtnGrpAbastecimentoInativo;
    private javax.swing.JButton jBtnNovo;
    private javax.swing.JButton jBtnSair;
    private javax.swing.JButton jBtnSalvar;
    private javax.swing.JComboBox jCmbBxAbastecCarro;
    private javax.swing.JComboBox jCmbBxCombustivel;
    private javax.swing.JComboBox jCmbBxFrentista;
    private javax.swing.JComboBox jCmbBxLiberador;
    private javax.swing.JComboBox jCmbBxMotorista;
    private javax.swing.JPanel jDisponibilidade;
    private javax.swing.JFormattedTextField jFrmTxtFldDataAbastecimento;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAbastecimento;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabelaAbastecimento;
    private javax.swing.JTextField jTxtFldIDAbastecimento;
    private javax.swing.JTextField jTxtFldKM;
    private javax.swing.JTextField jTxtFldLitros;
    private javax.swing.JLabel km;
    private javax.swing.JLabel liberador;
    private javax.swing.JLabel litros;
    private javax.swing.JLabel motorista;
    // End of variables declaration                   

    /**
     * @return the ac
     */
    public AbastecimentoController getAc() {
        return ac;
    }

    /**
     * @param ac the ac to set
     */
    public void setAc(AbastecimentoController ac) {
        this.ac = ac;
    }

    /**
     * @return the bGDisponibilidadeAbastec
     */
    public javax.swing.ButtonGroup getbGDisponibilidadeAbastec() {
        return bGDisponibilidadeAbastec;
    }

    /**
     * @param bGDisponibilidadeAbastec the bGDisponibilidadeAbastec to set
     */
    public void setbGDisponibilidadeAbastec(javax.swing.ButtonGroup bGDisponibilidadeAbastec) {
        this.bGDisponibilidadeAbastec = bGDisponibilidadeAbastec;
    }

    /**
     * @return the carro
     */
    public javax.swing.JLabel getCarro() {
        return carro;
    }

    /**
     * @param carro the carro to set
     */
    public void setCarro(javax.swing.JLabel carro) {
        this.carro = carro;
    }

    /**
     * @return the combustivel
     */
    public javax.swing.JLabel getCombustivel() {
        return combustivel;
    }

    /**
     * @param combustivel the combustivel to set
     */
    public void setCombustivel(javax.swing.JLabel combustivel) {
        this.combustivel = combustivel;
    }

    /**
     * @return the dataAbastecimento
     */
    public javax.swing.JLabel getDataAbastecimento() {
        return dataAbastecimento;
    }

    /**
     * @param dataAbastecimento the dataAbastecimento to set
     */
    public void setDataAbastecimento(javax.swing.JLabel dataAbastecimento) {
        this.dataAbastecimento = dataAbastecimento;
    }

    /**
     * @return the km
     */
    public javax.swing.JLabel getKm() {
        return km;
    }

    /**
     * @param km the km to set
     */
    public void setKm(javax.swing.JLabel km) {
        this.km = km;
    }

    /**
     * @return the liberador
     */
    public javax.swing.JLabel getLiberador() {
        return liberador;
    }

    /**
     * @param liberador the liberador to set
     */
    public void setLiberador(javax.swing.JLabel liberador) {
        this.liberador = liberador;
    }

    /**
     * @return the litros
     */
    public javax.swing.JLabel getLitros() {
        return litros;
    }

    /**
     * @param litros the litros to set
     */
    public void setLitros(javax.swing.JLabel litros) {
        this.litros = litros;
    }
}

